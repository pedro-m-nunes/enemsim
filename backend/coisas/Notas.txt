Algumas anotações.

IMPORTANTE:
- Por uma questão de tempo e prioridades, um item poderá ser somente de uma prova por enquanto.

COISAS EM PROCESSO:
- (Macro) Fazendo o gerador de simulados.
- Sistema de seleção usando a classe Estudante (itens já acertados, já feitos).
- Geração de simulados padrão.

COISAS A FAZER:
- (Alta prioridade) Passar as questões dos microdados para esse banco (10 habilidades mais frequentes).
- Busca e geração usando as questões com dificuldade próximas à mediana.
- Atualizar testes unitários do gerador de simulados.
- EstudanteHabilidade (?).
- Insert de provas e itens de provas.
- Services/controllers com as operações dos usuários (CRUD...).
- Testes unitários do CRUD das entidades.
- Acertar relacionamento de Disciplina e Resolucao com Item (resolver erros).
- (Não nesse sistema) Código para extrair os atributos dos itens dos microdados do Inep.

PROBLEMAS ENCONTRADOS:
- Resolucao e Disciplina em um Set em Item (OneToMany) causam LazyInitializationException quando o item é chamado/buscado.
- (Baixa prioridade) O cascade não funcionou bem em Item.Habilidade.

DÚVIDAS/IDEIAS:
- Como se dará a identificação dos pontos fortes/fracos? EstudanteHabilidade mesmo?
- Qual a melhor forma de deixar valores padrão para os atributos?
- Como usar cascade nos relacionamentos?
- Qual a melhor forma de manipular as entidades relacionais (SimuladoItem, ProvaItem...)?
- Usar HashSet (sem ordenação) ou LinkedHashSet (com ordenação)?
- Colocar alguns atributos como final (Simulado.adaptacao)?
- Usar javax.validation.constraints?
- Usar @Basic?
- Usar @Transactional?
- Qual a melhor forma de fazer perfis de usuário?
- Usar Postgres ou MySQL?

TESTAR:
- Se os itens são removidos quando se remove um simulado (não devem).
- ...

PRECISA DE PESQUISA:
- Spring Security (user...)
- JWT
- Fetch (lazy, eager)
- Web vs Webflux
- Spring Cloud
- Flyway (alter table...)
